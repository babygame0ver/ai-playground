{"version":3,"sources":["StateContainer/Constants/constants.js","Services/ChatServices.js","Services/config.js","StateContainer/Actions/ChatActions.js","StateContainer/Reducers/index.js","StateContainer/Reducers/chatReducer.js","Components/ChatBox/ChatBox.js","Components/CodeEditor/CodeEditor.js","Components/Header/Header.js","Views/AssignmentView/AssignmentView.js","Routes/Routes.js","StateContainer/Store.js","App.js","reportWebVitals.js","index.js"],"names":["START_LOADER","STOP_LOADER","QUERY_RESPONSE","ChatBotService","payload","axios","ChatBoxAction","callback","dispatch","type","ChatServices","then","response","data","appReducer","combineReducers","ChatReducer","state","isloading","action","query_response","rootReducer","ChatBox","props","handleOnChange","event","target","name","value","setState","scrollToBottom","messagesEnd","scrollIntoView","behavior","updateQueryResponseCallBack","query","count","conversations","Object","assign","chatWithBot","preventDefault","push","human","bot","count_payload","JSON","stringify","this","className","map","conversation","counter","class","style","float","clear","ref","el","Form","onSubmit","method","Group","Control","autoComplete","size","placeholder","onChange","React","Component","connect","bindActionCreators","CodeEditor","updateCodeBase","activeTab","code","editor","monaco","focus","prevProps","height","width","theme","defaultLanguage","defaultValue","Header","Navbar","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","AssignmentView","renameFileOpenModal","index","renameFileName","codebase","fileIndx","modal","changeFileName","selectTabAndLoadCode","handleCloseOnly","handleClose","randomInteger","min","max","Math","floor","random","createNewTab","newTabsSampleName","fileName","length","code_sample","deleteTab","newCodeBase","filter","fileIndex","document","Row","Modal","show","onHide","closeButton","Title","Body","Footer","Button","onClick","Col","file","Badge","onDoubleClick","exact","path","component","store","createStore","applyMiddleware","thunk","App","Container","fluid","Routes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7c371192.chunk.js","sourcesContent":["export const START_LOADER = 'START_LOADER'\r\nexport const STOP_LOADER = 'STOP_LOADER'\r\nexport const QUERY_RESPONSE = 'QUERY_RESPONSE'","import * as axios from 'axios'\r\nimport { BACKEND_URL } from './config'\r\n\r\nexport const ChatBotService = (payload) => {\r\n    return axios.post(BACKEND_URL, payload)\r\n}\r\n\r\n","export const BACKEND_URL = 'https://shrouded-oasis-94153.herokuapp.com/'\r\n","import {\r\n    START_LOADER,\r\n    STOP_LOADER,\r\n    QUERY_RESPONSE\r\n} from '../Constants'\r\nimport { ChatServices } from \"../../Services\";\r\n\r\n\r\nexport const ChatBoxAction = (payload,callback) => (dispatch) =>{   \r\n    dispatch( { type:START_LOADER })    \r\n    ChatServices.ChatBotService(payload)    \r\n    .then((response) => {      \r\n      dispatch({ type:QUERY_RESPONSE, payload:response.data })                \r\n      callback()\r\n      dispatch({ type:STOP_LOADER })      \r\n    })    \r\n}","import { combineReducers } from 'redux';\r\nimport ChatReducer from './chatReducer'\r\n\r\nconst appReducer = combineReducers({\r\n    ChatReducer: ChatReducer\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n    return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer","import {\r\n  START_LOADER,\r\n  STOP_LOADER,\r\n  QUERY_RESPONSE\r\n  } from \"../Constants\";\r\n  \r\n  export default (state = { isloading: true }, action) => {\r\n    switch (action.type) {\r\n        case START_LOADER:\r\n          return {\r\n            ...state,\r\n            isloading: true,\r\n          };\r\n        case STOP_LOADER:\r\n          return {\r\n            ...state,\r\n            isloading: false,\r\n          };      \r\n      case QUERY_RESPONSE:\r\n        return {\r\n          ...state,\r\n          query_response: action.payload,\r\n        };      \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import React from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Form } from 'react-bootstrap'\r\nimport './style.css'\r\nimport { ChatBoxAction } from '../../StateContainer'\r\n\r\nclass ChatBox extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      query: '',\r\n      conversations: [],\r\n      count: 0\r\n    }\r\n  }\r\n\r\n  handleOnChange = (event) => {\r\n    const { name, value } = event.target\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n\r\n  updateQueryResponseCallBack = () => {\r\n    const { query, count } = this.props.query_response;\r\n    let conversations = Object.assign(this.state.conversations)\r\n    conversations[count]['bot'] = query\r\n    this.setState({\r\n      conversations\r\n    })\r\n  }\r\n\r\n  chatWithBot = (event) => {\r\n    /* Network Calls will happen here. */\r\n    event.preventDefault()\r\n    const { query, count, conversations } = this.state\r\n    conversations.push({\r\n      human: query,\r\n      bot: '...'\r\n    }) // Marking the response as waiting to be from the bot side to process.\r\n    this.setState({\r\n      query: '',\r\n      count: count + 1,\r\n      conversations\r\n    })\r\n\r\n    // submitting data to track the conversations with the bot and human response.\r\n    const count_payload = {\r\n      query,\r\n      count\r\n    }\r\n    let data = JSON.stringify(count_payload)\r\n    const payload = {\r\n      \"code\": `(function expire (pa) { return pa;})('${data}')`\r\n    }\r\n    this.props.ChatBoxAction(payload, this.updateQueryResponseCallBack)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-10\">\r\n            <div className=\"chatbox-conversation\">\r\n              {\r\n                this.state.conversations.map((conversation, counter) => {\r\n                  return <div key={counter} className=\"conversation\" >\r\n                    <ul className=\"single-conversation\">\r\n                      <li>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-5\">\r\n                            <div className=\"query human\">\r\n                              <span>\r\n                                <i class=\"far fa-user human-icon\"></i>\r\n                                <span class=\"human-conversation\"> {conversation.human}  </span>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-7\">\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-7\">\r\n                          </div>\r\n                          <div className=\"col-5\">\r\n                            <div className=\"query bot\">\r\n                              <span>\r\n                                {conversation.bot}\r\n                                <span> <i class=\"fas fa-robot bot-icon\"></i>\r\n                                </span></span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                })\r\n              }\r\n              <div style={{ float: \"left\", clear: \"both\" }}\r\n                ref={(el) => { this.messagesEnd = el; }}>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-10\">\r\n            <Form onSubmit={this.chatWithBot} method=\"post\">\r\n              <Form.Group  >\r\n                <Form.Control autoComplete={\"off\"} name=\"query\" size=\"small\" type=\"text\" value={this.state.query} placeholder=\"Type Message here\" onChange={this.handleOnChange} />\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n    ChatBoxAction\r\n  },\r\n    dispatch)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  query_response: state.ChatReducer.query_response\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatBox);\r\n","import React from \"react\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport './style.css';\r\n\r\nclass CodeEditor extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      code: '',\r\n      activeTab: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      code: this.props.code,\r\n      activeTab: this.props.activeTab\r\n    })\r\n  }\r\n\r\n  editorDidMount(editor, monaco) {\r\n    editor.focus();\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {    \r\n    if (prevProps.code !== this.props.code) {\r\n      this.setState({ code: this.props.code, activeTab: this.props.activeTab });\r\n    }\r\n  }\r\n\r\n  updateCodeBase = (value,event) => {\r\n    this.props.updateCodeBase(this.state.activeTab,value)\r\n  }\r\n\r\n  render() {\r\n    const code = this.state.code;\r\n    const options = {\r\n      selectOnLineNumbers: false\r\n    };\r\n\r\n    return (\r\n      <Editor\r\n        height=\"500px\"\r\n        width=\"700px\"\r\n        theme={\"vs-dark\"}\r\n        defaultLanguage=\"javascript\"\r\n        defaultValue={this.state.code}\r\n        value={this.state.code}\r\n        onChange={this.updateCodeBase}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeEditor;\r\n","import React from \"react\";\r\nimport { Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport './style.css'\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">AI Playground</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse className=\"Header\" id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto\">\r\n            <Nav.Link href=\"\">Learn AI</Nav.Link>\r\n            <Nav.Link href=\"#link\">Docs</Nav.Link>\r\n            <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Profile</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Badge, \r\n  Modal, \r\n  Button, \r\n  Form, \r\n  Row,  \r\n  Col\r\n  } from 'react-bootstrap';\r\nimport {  \r\n  ChatBox,\r\n  CodeEditor\r\n} from '../../Components'\r\nimport './style.css'\r\n\r\nclass AssignmentView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      codebase: [{\r\n        fileName: 'Ex.js',\r\n        code_sample: `/* console.log('Hello JS') from Ex.js \r\nSource Code: https://github.com/babygame0ver/ai-playground */`\r\n      }],\r\n      activeTab: 0,\r\n      modal: false,\r\n      renameFileName: '',\r\n      fileIndx: 0,\r\n      newTabsSampleName: [\r\n        'Google.js',\r\n        'Facebook.js',\r\n        'Twitter.js',\r\n        'LinkedIn.js',\r\n        'Spotify.js',\r\n        'Paytm.js',\r\n        'Zomato.js',\r\n        'Swiggy.js',\r\n        'Uber.js',\r\n        'Ola.js',\r\n      ]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = 'Assignment'\r\n  }\r\n\r\n  renameFileOpenModal = (index) => {\r\n    this.setState({\r\n      renameFileName: this.state.codebase[index]['fileName'],\r\n      fileIndx: index\r\n    })\r\n    this.setState({\r\n      modal: true\r\n    })\r\n  }\r\n\r\n  changeFileName = (event) => {\r\n    const { value } = event.target\r\n    this.setState({\r\n      renameFileName: value\r\n    })\r\n  }\r\n\r\n  selectTabAndLoadCode = (activeTab) => {\r\n    this.setState({\r\n      activeTab\r\n    })\r\n  }\r\n\r\n  handleCloseOnly = () => {\r\n    this.setState({\r\n      modal: false\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      modal: false\r\n    })\r\n    const codebase = Object.assign(this.state.codebase);\r\n    const { renameFileName, fileIndx } = this.state\r\n    codebase[fileIndx]['fileName'] = renameFileName\r\n    this.setState({\r\n      codebase\r\n    })\r\n  }\r\n\r\n  randomInteger = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  createNewTab = () => {\r\n    const newTabsSampleName = Object.assign(this.state.newTabsSampleName)\r\n    let randomIndex = this.randomInteger(0, newTabsSampleName.length - 1);\r\n    const fileName = newTabsSampleName[randomIndex]\r\n    const codebase = Object.assign(this.state.codebase)\r\n    codebase.push({\r\n      fileName,\r\n      code_sample: `/* console.log('Hello JS') from ${fileName}\r\nSource Code: https://github.com/babygame0ver/ai-playground */ `\r\n    })\r\n    this.setState({\r\n      codebase,\r\n      activeTab : codebase.length - 1\r\n    })\r\n  }\r\n\r\n  deleteTab = (index) => {\r\n    const codebase = Object.assign(this.state.codebase)\r\n    const newCodeBase = codebase.filter((code, fileIndex) => {\r\n      return fileIndex != index\r\n    })\r\n    this.setState({\r\n      codebase: newCodeBase,\r\n      activeTab : newCodeBase.length - 1\r\n    })\r\n\r\n  }\r\n\r\n  updateCodeBase = (index, value) => {\r\n    const codebase = Object.assign(this.state.codebase);\r\n    codebase[index]['code_sample'] = value\r\n    this.setState({\r\n      codebase\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { codebase, activeTab } = this.state\r\n    return (\r\n      <div>        \r\n        <Row>\r\n          <Modal show={this.state.modal} onHide={this.handleClose} size=\"sm\">\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Rename File Name</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form.Group>\r\n                <Form.Control size=\"lg\" type=\"text\" onChange={this.changeFileName} value={this.state.renameFileName} placeholder=\"Large text\" />\r\n              </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.handleCloseOnly}>\r\n                Cancel\r\n          </Button>\r\n              <Button variant=\"primary\" onClick={this.handleClose}>\r\n                Rename\r\n          </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          <Col>\r\n            <div className=\"row file-tabs\">\r\n              {this.state.codebase.map((file, fileIndex) => {\r\n                return fileIndex === this.state.activeTab ?\r\n                  <span key={fileIndex} className=\"file\">\r\n                    <Badge onClick={() => this.selectTabAndLoadCode(fileIndex)} onDoubleClick={() => this.renameFileOpenModal(fileIndex)} variant=\"success\">\r\n                      <h6>{file.fileName}  </h6>\r\n                    </Badge> {fileIndex !== 0 ? <Button onClick={() => this.deleteTab(fileIndex)} size=\"sm\">x</Button> : <></>}\r\n                  </span> :\r\n                  <span key={fileIndex} className=\"file\">\r\n                    <Badge onClick={() => this.selectTabAndLoadCode(fileIndex)} onDoubleClick={() => this.renameFileOpenModal(fileIndex)} variant=\"primary\">\r\n                      <h6>{file.fileName} </h6>\r\n                    </Badge>\r\n                    {fileIndex !== 0 ? <Button onClick={() => this.deleteTab(fileIndex)} size=\"sm\">x</Button> : <></>}\r\n                  </span>\r\n              })}\r\n              {this.state.codebase.length < 5 ? <span><Button variant=\"dark\" onClick={this.createNewTab}>+</Button></span> : <></>}\r\n            </div>\r\n            <Row>\r\n              <CodeEditor\r\n                activeTab={this.state.activeTab}\r\n                code={codebase[activeTab]['code_sample']}\r\n                updateCodeBase={this.updateCodeBase}\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <ChatBox />\r\n          </Col>\r\n        </Row>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssignmentView;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {\r\n  AssignmentView\r\n} from '../Views'\r\n\r\nexport default () => (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"*\" component={AssignmentView} />            \r\n      </Switch>\r\n    </Router>\r\n  ); \r\n\r\n\r\n\r\n","import rootReducer from './Reducers';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store = createStore(rootReducer , {}, applyMiddleware(...[thunk]));\r\n\r\nexport default store","import './App.css';\r\nimport { Routes } from './Routes'\r\nimport { Provider } from 'react-redux';\r\nimport store from './StateContainer/Store';\r\nimport {Header} from '../src/Components'\r\nimport {\r\n  Container,\r\n} from 'react-bootstrap';\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Header />\r\n      <Container fluid>\r\n        <Routes />\r\n      </Container>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}